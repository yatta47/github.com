<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fluentd on yatta47.localhost</title><link>https://yatta47.github.io/categories/fluentd/</link><description>Recent content in fluentd on yatta47.localhost</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Thu, 12 Aug 2021 14:22:31 +0000</lastBuildDate><atom:link href="https://yatta47.github.io/categories/fluentd/index.xml" rel="self" type="application/rss+xml"/><item><title>Fluentdについて調べ始めた。</title><link>https://yatta47.github.io/p/fluentd%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E8%AA%BF%E3%81%B9%E5%A7%8B%E3%82%81%E3%81%9F/</link><pubDate>Thu, 12 Aug 2021 14:22:31 +0000</pubDate><guid>https://yatta47.github.io/p/fluentd%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E8%AA%BF%E3%81%B9%E5%A7%8B%E3%82%81%E3%81%9F/</guid><description>Fluentdについて調べる必要があったので調べています。
参考にしているサイト KafkaブローカのWrite Ahead Log格納先はデフォルトで/tmp/kafka-logsとなる。この配下に、recovery-point-offset-checkpoint, replication-offset-checkpoint ファイルが生成される。また今回の場合はtest-0という名でディレクトリが生成され、さらにその配下にバイナリログが生成されていた。詳しい仕組みはよく分かってないが、これらのリソースがブローカの耐障害性をサポートする、はず。
[https://atomitech.jp/study/entry-550/ 【Hinemos】アプリケーションログをfluentdで転送する｜技術研究・研究日誌｜株式会社アトミテック]</description></item></channel></rss>